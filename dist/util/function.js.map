{"version":3,"file":"function.js","sources":["../../../node_modules/.pnpm/@babel+runtime@7.17.8/node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../../../node_modules/.pnpm/@babel+runtime@7.17.8/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../../src/util/function.ts"],"sourcesContent":["export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","import { tracked } from '@glimmer/tracking';\nimport { associateDestroyableChild, destroy, isDestroyed, isDestroying } from '@ember/destroyable';\n\nimport { TrackedAsyncData } from 'ember-async-data';\n\nimport { resource } from '../core/function-based';\n\n/**\n * <div class=\"callout note\">\n *\n * This is not a core part of ember-resources, but is an example utility to demonstrate a concept when authoring your own resources. However, this utility is still under the broader library's SemVer policy.\n *\n * A consuming app will not pay for the bytes of this utility unless imported.\n *\n * </div>\n *\n * _An example utility that uses resource_\n *\n * Any tracked data accessed in a tracked function _before_ an `await`\n * will \"entangle\" with the function -- we can call these accessed tracked\n * properties, the \"tracked prelude\". If any properties within the tracked\n * payload  change, the function will re-run.\n *\n * ```js\n * import Component from '@glimmer/component';\n * import { tracked } from '@glimmer/tracking';\n * import { trackedFunction }  from 'ember-resources/util/function';\n *\n * class Demo extends Component {\n *   @tracked id = 1;\n *\n *   request = trackedFunction(this, async () => {\n *     let response = await fetch(`https://swapi.dev/api/people/${this.id}`);\n *     let data = await response.json();\n *\n *     return data; // { name: 'Luke Skywalker', ... }\n *   });\n *\n *   updateId = (event) => this.id = event.target.value;\n *\n *   // Renders \"Luke Skywalker\"\n *   <template>\n *     {{this.request.value.name}}\n *\n *     <input value={{this.id}} {{on 'input' this.updateId}}>\n *   </template>\n * }\n * ```\n * _Note_, this example uses the proposed `<template>` syntax from the [First-Class Component Templates RFC][rfc-799]\n *\n * Also note that after an `await`, the `this` context should not be accessed as it could lead to\n * destruction/timing issues.\n *\n * [rfc-799]: https://github.com/emberjs/rfcs/pull/779\n *\n * @param {Object} context destroyable parent, e.g.: component instance aka \"this\"\n * @param {Function} fn the function to run with the return value available on .value\n */\nexport function trackedFunction<Return>(context: object, fn: () => Return) {\n  const state = new State(fn);\n\n  let destroyable = resource<State<Return>>(context, () => {\n    state.retry();\n\n    return state;\n  });\n\n  associateDestroyableChild(destroyable, state);\n\n  return destroyable;\n}\n\n/**\n * State container that represents the asynchrony of a `trackedFunction`\n */\nexport class State<Value> {\n  @tracked data: TrackedAsyncData<Value> | null = null;\n  @tracked declare promise: Value;\n\n  #fn: () => Value;\n\n  constructor(fn: () => Value) {\n    this.#fn = fn;\n  }\n\n  get state(): TrackedAsyncData<Value>['state'] | 'UNSTARTED' {\n    return this.data?.state ?? 'UNSTARTED';\n  }\n\n  /**\n   * Initially true, and remains true\n   * until the underlying promise resolves or rejects.\n   */\n  get isPending() {\n    if (!this.data) return true;\n\n    return this.data.isPending ?? false;\n  }\n\n  /**\n   * Alias for `isResolved || isRejected`\n   */\n  get isFinished() {\n    return this.isResolved || this.isRejected;\n  }\n\n  /**\n   * Alias for `isFinished`\n   * which is in turn an alias for `isResolved || isRejected`\n   */\n  get isSettled() {\n    return this.isFinished;\n  }\n\n  /**\n   * Alias for `isPending`\n   */\n  get isLoading() {\n    return this.isPending;\n  }\n\n  /**\n   * When true, the function passed to `trackedFunction` has resolved\n   */\n  get isResolved() {\n    return this.data?.isResolved ?? false;\n  }\n\n  /**\n   * Alias for `isRejected`\n   */\n  get isError() {\n    return this.isRejected;\n  }\n\n  /**\n   * When true, the function passed to `trackedFunction` has errored\n   */\n  get isRejected() {\n    return this.data?.isRejected ?? false;\n  }\n\n  /**\n   * this.data may not exist yet.\n   *\n   * Additionally, prior iterations of TrackedAsyncData did\n   * not allow the accessing of data before\n   * .state === 'RESOLVED'  (isResolved).\n   *\n   * From a correctness standpoint, this is perfectly reasonable,\n   * as it forces folks to handle the states involved with async functions.\n   *\n   * The original version of `trackedFunction` did not use TrackedAsyncData,\n   * and did not have these strictnesses upon property access, leaving folks\n   * to be as correct or as fast/prototype-y as they wished.\n   *\n   * For now, `trackedFunction` will retain that flexibility.\n   */\n  get value(): Awaited<Value> | null {\n    if (this.data?.isResolved) {\n      // This is sort of a lie, but it ends up working out due to\n      // how promises chain automatically when awaited\n      return this.data.value as Awaited<Value>;\n    }\n\n    return null;\n  }\n\n  /**\n   * When the function passed to `trackedFunction` throws an error,\n   * that error will be the value returned by this property\n   */\n  get error() {\n    return this.data?.error ?? null;\n  }\n\n  /**\n   * Will re-invoke the function passed to `trackedFunction`\n   * this will also re-set some properties on the `State` instance.\n   * This is the same `State` instance as before, as the `State` instance\n   * is tied to the `fn` passed to `trackedFunction`\n   *\n   * `error` or `resolvedValue` will remain as they were previously\n   * until this promise resolves, and then they'll be updated to the new values.\n   */\n  retry = async () => {\n    if (isDestroyed(this) || isDestroying(this)) return;\n\n    // We need to invoke this before going async so that tracked properties are consumed (entangled with) synchronously\n    this.promise = this.#fn();\n\n    // TrackedAsyncData interacts with tracked data during instantiation.\n    // We don't want this internal state to entangle with `trackedFunction`\n    // so that *only* the tracked data in `fn` can be entangled.\n    await Promise.resolve();\n\n    if (this.data) {\n      let isUnsafe = isDestroyed(this.data) || isDestroying(this.data);\n\n      if (!isUnsafe) {\n        destroy(this.data);\n        this.data = null;\n      }\n    }\n\n    if (isDestroyed(this) || isDestroying(this)) return;\n\n    // TrackedAsyncData manages the destroyable child association for us\n    this.data = new TrackedAsyncData(this.promise);\n\n    return this.promise;\n  };\n}\n"],"names":["_classApplyDescriptorSet","receiver","descriptor","value","set","call","writable","TypeError","_classPrivateFieldSet","privateMap","classExtractFieldDescriptor","classApplyDescriptorSet","trackedFunction","context","fn","state","State","destroyable","resource","retry","associateDestroyableChild","_class","_fn","WeakMap","constructor","_initializerDefineProperty","_descriptor","_descriptor2","_classPrivateFieldInitSpec","_defineProperty","isDestroyed","isDestroying","promise","_classPrivateFieldGet","Promise","resolve","data","isUnsafe","destroy","TrackedAsyncData","isPending","isFinished","isResolved","isRejected","isSettled","isLoading","isError","error","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","initializer"],"mappings":";;;;;;;;;AAAe,SAASA,wBAAwBA,CAACC,QAAQ,EAAEC,UAAU,EAAEC,KAAK,EAAE;EAC5E,IAAID,UAAU,CAACE,GAAG,EAAE;IAClBF,UAAU,CAACE,GAAG,CAACC,IAAI,CAACJ,QAAQ,EAAEE,KAAK,CAAC,CAAA;AACtC,GAAC,MAAM;AACL,IAAA,IAAI,CAACD,UAAU,CAACI,QAAQ,EAAE;AACxB,MAAA,MAAM,IAAIC,SAAS,CAAC,0CAA0C,CAAC,CAAA;AACjE,KAAA;IAEAL,UAAU,CAACC,KAAK,GAAGA,KAAK,CAAA;AAC1B,GAAA;AACF;;ACRe,SAASK,qBAAqBA,CAACP,QAAQ,EAAEQ,UAAU,EAAEN,KAAK,EAAE;EACzE,IAAID,UAAU,GAAGQ,4BAA2B,CAACT,QAAQ,EAAEQ,UAAU,EAAE,KAAK,CAAC,CAAA;AACzEE,EAAAA,wBAAuB,CAACV,QAAQ,EAAEC,UAAU,EAAEC,KAAK,CAAC,CAAA;AACpD,EAAA,OAAOA,KAAK,CAAA;AACd;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,eAAeA,CAASC,OAAe,EAAEC,EAAgB,EAAE;AACzE,EAAA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,EAAE,CAAC,CAAA;AAE3B,EAAA,IAAIG,WAAW,GAAGC,QAAQ,CAAgBL,OAAO,EAAE,MAAM;IACvDE,KAAK,CAACI,KAAK,EAAE,CAAA;AAEb,IAAA,OAAOJ,KAAK,CAAA;AACd,GAAC,CAAC,CAAA;AAEFK,EAAAA,yBAAyB,CAACH,WAAW,EAAEF,KAAK,CAAC,CAAA;AAE7C,EAAA,OAAOE,WAAW,CAAA;AACpB,CAAA;;AAEA;AACA;AACA;AACaD,IAAAA,KAAK,IAAAK,MAAA,IAAAC,GAAA,oBAAAC,OAAA,EAAA,EAAX,MAAMP,KAAK,CAAQ;EAMxBQ,WAAWA,CAACV,EAAe,EAAE;AAAAW,IAAAA,0BAAA,eAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAD,IAAAA,0BAAA,kBAAAE,YAAA,EAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,OAAAN,GAAA,EAAA;MAAAhB,QAAA,EAAA,IAAA;MAAAH,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AA+F7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARE0B,IAAAA,eAAA,gBASQ,YAAY;MAClB,IAAIC,WAAW,CAAC,IAAI,CAAC,IAAIC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAA;;AAE7C;AACA,MAAA,IAAI,CAACC,OAAO,GAAAC,qBAAA,CAAG,IAAI,EAAAX,GAAA,CAAAjB,CAAAA,IAAA,CAAJ,IAAI,CAAM,CAAA;;AAEzB;AACA;AACA;AACA,MAAA,MAAM6B,OAAO,CAACC,OAAO,EAAE,CAAA;MAEvB,IAAI,IAAI,CAACC,IAAI,EAAE;AACb,QAAA,IAAIC,QAAQ,GAAGP,WAAW,CAAC,IAAI,CAACM,IAAI,CAAC,IAAIL,YAAY,CAAC,IAAI,CAACK,IAAI,CAAC,CAAA;QAEhE,IAAI,CAACC,QAAQ,EAAE;AACbC,UAAAA,OAAO,CAAC,IAAI,CAACF,IAAI,CAAC,CAAA;UAClB,IAAI,CAACA,IAAI,GAAG,IAAI,CAAA;AAClB,SAAA;AACF,OAAA;MAEA,IAAIN,WAAW,CAAC,IAAI,CAAC,IAAIC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAA;;AAE7C;MACA,IAAI,CAACK,IAAI,GAAG,IAAIG,gBAAgB,CAAC,IAAI,CAACP,OAAO,CAAC,CAAA;MAE9C,OAAO,IAAI,CAACA,OAAO,CAAA;KACpB,CAAA,CAAA;AAjICxB,IAAAA,qBAAA,CAAI,IAAA,EAAAc,GAAA,EAAOR,EAAE,CAAA,CAAA;AACf,GAAA;EAEA,IAAIC,KAAKA,GAAmD;AAC1D,IAAA,OAAO,IAAI,CAACqB,IAAI,EAAErB,KAAK,IAAI,WAAW,CAAA;AACxC,GAAA;;AAEA;AACF;AACA;AACA;EACE,IAAIyB,SAASA,GAAG;AACd,IAAA,IAAI,CAAC,IAAI,CAACJ,IAAI,EAAE,OAAO,IAAI,CAAA;AAE3B,IAAA,OAAO,IAAI,CAACA,IAAI,CAACI,SAAS,IAAI,KAAK,CAAA;AACrC,GAAA;;AAEA;AACF;AACA;EACE,IAAIC,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,UAAU,CAAA;AAC3C,GAAA;;AAEA;AACF;AACA;AACA;EACE,IAAIC,SAASA,GAAG;IACd,OAAO,IAAI,CAACH,UAAU,CAAA;AACxB,GAAA;;AAEA;AACF;AACA;EACE,IAAII,SAASA,GAAG;IACd,OAAO,IAAI,CAACL,SAAS,CAAA;AACvB,GAAA;;AAEA;AACF;AACA;EACE,IAAIE,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACN,IAAI,EAAEM,UAAU,IAAI,KAAK,CAAA;AACvC,GAAA;;AAEA;AACF;AACA;EACE,IAAII,OAAOA,GAAG;IACZ,OAAO,IAAI,CAACH,UAAU,CAAA;AACxB,GAAA;;AAEA;AACF;AACA;EACE,IAAIA,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACP,IAAI,EAAEO,UAAU,IAAI,KAAK,CAAA;AACvC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIxC,KAAKA,GAA0B;AACjC,IAAA,IAAI,IAAI,CAACiC,IAAI,EAAEM,UAAU,EAAE;AACzB;AACA;AACA,MAAA,OAAO,IAAI,CAACN,IAAI,CAACjC,KAAK,CAAA;AACxB,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;EACE,IAAI4C,KAAKA,GAAG;AACV,IAAA,OAAO,IAAI,CAACX,IAAI,EAAEW,KAAK,IAAI,IAAI,CAAA;AACjC,GAAA;AAsCF,CAAC,CAAA,GAAArB,WAAA,GAAAsB,yBAAA,CAAA3B,MAAA,CAAA4B,SAAA,EAAA,MAAA,EAAA,CAxIEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAA9C,QAAA,EAAA,IAAA;AAAA+C,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAwC,IAAI,CAAA;AAAA,GAAA;AAAA,CAAA1B,CAAAA,EAAAA,YAAA,GAAAqB,yBAAA,CAAA3B,MAAA,CAAA4B,SAAA,cACnDC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAA9C,QAAA,EAAA,IAAA;EAAA+C,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,GAAAhC,MAAA;;;;","x_google_ignoreList":[0,1]}